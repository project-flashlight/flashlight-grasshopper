// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/vwdilab/flashlight-grasshopper/grasshopper (interfaces: NewRelicFetcher,CloudFoundryFetcher)

// Package mock_grasshopper is a generated GoMock package.
package mock_grasshopper

import (
	gomock "github.com/golang/mock/gomock"
	grasshopper "github.com/vwdilab/flashlight-grasshopper/grasshopper"
	reflect "reflect"
)

// MockNewRelicFetcher is a mock of NewRelicFetcher interface
type MockNewRelicFetcher struct {
	ctrl     *gomock.Controller
	recorder *MockNewRelicFetcherMockRecorder
}

// MockNewRelicFetcherMockRecorder is the mock recorder for MockNewRelicFetcher
type MockNewRelicFetcherMockRecorder struct {
	mock *MockNewRelicFetcher
}

// NewMockNewRelicFetcher creates a new mock instance
func NewMockNewRelicFetcher(ctrl *gomock.Controller) *MockNewRelicFetcher {
	mock := &MockNewRelicFetcher{ctrl: ctrl}
	mock.recorder = &MockNewRelicFetcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockNewRelicFetcher) EXPECT() *MockNewRelicFetcherMockRecorder {
	return m.recorder
}

// GetApps mocks base method
func (m *MockNewRelicFetcher) GetApps() (*grasshopper.NewRelicApps, error) {
	ret := m.ctrl.Call(m, "GetApps")
	ret0, _ := ret[0].(*grasshopper.NewRelicApps)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetApps indicates an expected call of GetApps
func (mr *MockNewRelicFetcherMockRecorder) GetApps() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetApps", reflect.TypeOf((*MockNewRelicFetcher)(nil).GetApps))
}

// MockCloudFoundryFetcher is a mock of CloudFoundryFetcher interface
type MockCloudFoundryFetcher struct {
	ctrl     *gomock.Controller
	recorder *MockCloudFoundryFetcherMockRecorder
}

// MockCloudFoundryFetcherMockRecorder is the mock recorder for MockCloudFoundryFetcher
type MockCloudFoundryFetcherMockRecorder struct {
	mock *MockCloudFoundryFetcher
}

// NewMockCloudFoundryFetcher creates a new mock instance
func NewMockCloudFoundryFetcher(ctrl *gomock.Controller) *MockCloudFoundryFetcher {
	mock := &MockCloudFoundryFetcher{ctrl: ctrl}
	mock.recorder = &MockCloudFoundryFetcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCloudFoundryFetcher) EXPECT() *MockCloudFoundryFetcherMockRecorder {
	return m.recorder
}

// GetApps mocks base method
func (m *MockCloudFoundryFetcher) GetApps() (*grasshopper.CloudFoundryApps, error) {
	ret := m.ctrl.Call(m, "GetApps")
	ret0, _ := ret[0].(*grasshopper.CloudFoundryApps)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetApps indicates an expected call of GetApps
func (mr *MockCloudFoundryFetcherMockRecorder) GetApps() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetApps", reflect.TypeOf((*MockCloudFoundryFetcher)(nil).GetApps))
}
