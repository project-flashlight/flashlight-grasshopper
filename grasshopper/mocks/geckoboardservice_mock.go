// Code generated by MockGen. DO NOT EDIT.
// Source: geckoboardservice.go

// Package mock_grasshopper is a generated GoMock package.
package mock_grasshopper

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	"github.com/vwdilab/flashlight-grasshopper/grasshopper"
)

// MockGeckoboardService is a mock of GeckoboardService interface
type MockGeckoboardService struct {
	ctrl     *gomock.Controller
	recorder *MockGeckoboardServiceMockRecorder
}

// MockGeckoboardServiceMockRecorder is the mock recorder for MockGeckoboardService
type MockGeckoboardServiceMockRecorder struct {
	mock *MockGeckoboardService
}

// NewMockGeckoboardService creates a new mock instance
func NewMockGeckoboardService(ctrl *gomock.Controller) *MockGeckoboardService {
	mock := &MockGeckoboardService{ctrl: ctrl}
	mock.recorder = &MockGeckoboardServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockGeckoboardService) EXPECT() *MockGeckoboardServiceMockRecorder {
	return m.recorder
}

// PublishStatus mocks base method
func (m *MockGeckoboardService) PublishStatus(appStatus grasshopper.AppStatus) (*http.Response, error) {
	ret := m.ctrl.Call(m, "PublishStatus", appStatus)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PublishStatus indicates an expected call of PublishStatus
func (mr *MockGeckoboardServiceMockRecorder) PublishStatus(appStatus interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PublishStatus", reflect.TypeOf((*MockGeckoboardService)(nil).PublishStatus), appStatus)
}
